html, body, h1, h2, h3, form, p, input, output, div, section {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font: 1em sans-serif;
	line-height: 1.2;
	background: #F8F8FC;
	padding: 1rem;
}

header {
	text-align: center;
	margin: 0 0 2rem;
}

h1 {
	font: bold 2rem sans-serif;
}

.note {
	display: inline-block;
	position: relative;
	text-align: center;
	width: 1rem;
	height: 1rem;
	border-radius: 100%;
	background: #666666;
	color: white;
	font-size: 0.8rem;
	line-height: 1rem;
	vertical-align: middle;
	cursor: help;
}

.note:hover::after {
	content: attr(title);
	position: absolute;
	top: 0.8rem;
	left: 0.8rem;
	background: rgba(0, 0, 0, 0.8);
	width: 10rem;
	text-align: left;
	padding: 0.3rem 0.5rem;
	border-radius: 4px;
	line-height: 1.2;
}

main {
	max-width: 1000px;
	margin: 0 auto;
}

.input-grid {
	display: grid;
	grid-template-columns: auto 1fr;
	gap: 0.5rem 1rem;
	align-items: center;
}

input[type=text], output {
	padding: 0.5rem 0.8rem;
	font: 1.5rem monospace;
	letter-spacing: 0.2rem;
	border: 1px solid #CCCCDD;
	border-radius: 2px;
	background: white;
	white-space: pre;
}

output {
	overflow-x: auto;
}

.fail output {
	background: #FF8080;
}

#form-rect {
	padding: 1rem 13rem;
}

.grid {
	display: block;
	margin: 12rem auto;
	position: relative;
	--w: 3rem;
	--h: 3rem;
}

.grid button {
	position: absolute;
	width: 1.5rem;
	height: 1.5rem;
	user-select: none;
}

.grid button[name="add-row"] {
	bottom: -2rem;
	left: -4rem;
}

.grid button[name="remove-row"] {
	top: -2rem;
	left: -4rem;
}

.grid button[name="add-col"] {
	right: -2rem;
	top: -4rem;
}

.grid button[name="remove-col"] {
	left: -2rem;
	top: -4rem;
}

.grid .pattern, .grid .cell {
	position: absolute;
	border: 1px solid #BBBBCC;
	border-radius: 0;
}

.grid .pattern {
	text-align: right;
	font-size: 0.9rem;
	width: 12rem;
	top: -12rem;
	left: -12rem;
	border-top-left-radius: 5px;
	border-bottom-left-radius: 5px;
	background: #FCFCFE;
}

.grid .pattern:focus {
	background: white;
}

.grid .pattern.row {
	height: var(--h);
}

.grid .pattern.col {
	height: var(--w);
	transform: rotate(90deg);
	transform-origin: calc(var(--w) / 2) calc(var(--w) / 2);
	cursor: vertical-text;
}

.grid .cell {
	padding: 0.2rem;
	width: var(--w);
	height: var(--h);
	font-size: 0.5rem;
	text-align: center;
	line-height: calc(var(--h) - 0.4rem - 2px);
}

.grid .cell.solved {
	background: #DDFFCC;
	font-size: 1.5rem;
}

.error {
	display: none;
	grid-column: 1 / 3;
	font-size: 0.9rem;
	font-style: italic;
	color: #800000;
}

.fail .error {
	display: block;
}

/* tab control */

.tabbox {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

.tabbox>input {
	position: absolute;
	top: -100px;
}

.tabbox>label:first-of-type {
	margin-left: 0.5rem;
}

.tabbox>label {
	position: relative;
	padding: 0.6rem 1rem 0.5rem;
	cursor: pointer;
	border: 2px solid transparent;
	border-bottom: none;
	border-top-left-radius: 3px;
	border-top-right-radius: 3px;
	z-index: 1;
}

.tabbox>input:checked + label {
	background: white;
	border-color: #CCCCDD;
	padding: 0.5rem 1rem 0.6rem;
}

.tabbox>input:focus + label::after {
	content: "";
	position: absolute;
	top: 0.3rem;
	left: 0.3rem;
	right: 0.3rem;
	bottom: 0.4rem;
	border: 2px solid #0080FF;
	border-radius: 5px;
}

.tabbox>.tabcontent {
	display: none;
	flex: 100%;
	margin-top: -2px;
	border: 2px solid #CCCCDD;
	background: white;
	padding: 1.5rem;
	border-radius: 3px;
}

#t1:checked ~ .tabcontent[data-for="t1"],
#t2:checked ~ .tabcontent[data-for="t2"],
#t3:checked ~ .tabcontent[data-for="t3"] {
	display: block;
}

/* loading info */

#noscript-overlay {
	position: fixed;
	display: flex;
	background: rgba(240, 240, 240, 0.8);
	backdrop-filter: blur(2px);
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	padding: 1rem;
	align-items: center;
	justify-content: center;
	z-index: 10;
}

#loading {
	position: fixed;
	top: 0;
	left: 0;
	display: inline-block;
	background: white;
	padding: 0.5rem 1.5rem 0.5rem 1rem;
}
